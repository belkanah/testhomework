#!/bin/bash
PREFIX="${1:-NOT_SET}"
INTERFACE="$2"
regex=(^[1]?[0-9]?[0-9]?)||(^[2]?[0-5]?[0-5]?)
#Или срабатывает через раз, если добавить еще или \n или \\n или  "\\n", проверка пропускает любой символ 



# Блок проверки прав рута

username=`id -nu`
if [ "$username" != "$ROOTUSER_NAME" ]
then
	echo "Must be root to run \"`basename $0`\"."
	
fi


# Блок ввода подсети и хоста

echo "Enter subnet num from 1 to 255 or press Enter"
read SUBNET
echo "Enter host from 1 to 255 or press Enter";
read HOST;

# Проверка, что введены числа от 1 до 255

if [[ $SUBNET =~ $regex ]]&&[[ $HOST =~ $regex ]]; then
      echo "OK";
   
     else echo "You make an error. Subnet and host shold be in 1-255";
     exit 1; #УБЕРУ out from cicle and work without fix
fi


[[ "$PREFIX" = "NOT_SET" ]] && { echo "\$PREFIX must be passed as first positional argument"; exit 1; }
if [[ -z "$INTERFACE" ]]; then
    echo "\$INTERFACE must be passed as second positional argument"
    exit 1
fi


if [[ $SUBNET =~ $regex ]]; then
    # echo "first input in script ws \$SUBNET";
    if [[ $HOST=~$regex ]]; then
      # if exist subnet 1 & host 1 true
      #echo "is all true";
      popingui $INTERFACE $PREFIX $SUBNET $HOST;
    else 
      # if  subnet 1 host 0
      #echo "is no HOST";
     for HOST in {1..255}
        do
                popingui $INTERFACE $PREFIX  $SUBNET $HOST;
        done;
     fi;
 else
  if [[ $HOST =~ $regex ]]; then
      # if subnet 0 host 1
      #   echo "is no subnet";
      for SUBNET in {1..255}
        do
          popingui $INTERFACE $PREFIX $SUBNET $HOST;
        done
  else 
      # if subnet 0 host 0 
      #   echo "is all null or invalid"
      for SUBNET in {1..255}
        do
         	for HOST in {1..255}
        	do
		popingui $INTERFACE $PREFIX $SUBNET $HOST
                done
         done
    fi;

fi;


# Я пытаюсь использовать функцию и не могу подобрать синтаксис,как передать аргументы
popingui()
 {
   echo "[*] IP : ${PREFIX}.${SUBNET}.${HOST}"
   arping -c 3 -i "$INTERFACE" "${PREFIX}.${SUBNET}.${HOST}" 2> /dev/null
 }
